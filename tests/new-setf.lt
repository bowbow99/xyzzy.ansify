;;; -*- mode: lisp; package: cl.test.new-setf -*-
;;;
;;; tests/new-setf.lt
;;;

(defpackage :cl.test.new-setf)
(in-package :cl.test.new-setf)

(require "cl")
(cl::install)

(require "lisp-unit")
(use-package :lisp-unit)

(remove-all-tests)

(defconstant +unbound-value+ (gensym))

(defmacro %assert-setf (place new-value)
  (let (($old (gensym))
        ($new (gensym)))
    `(let ((,$old (handler-case
                      (multiple-value-list ,place)
                    (unbound-variable (e)
                      +unbound-value+)))
           (,$new (multiple-value-list ,new-value)))
       (unwind-protect
           (progn
             (mapc (lambda (actual expected)
                     (assert-equal expected actual))
                   (multiple-value-list (setf ,place ,new-value))
                   ,$new)
             (mapc (lambda (actual expected)
                     (assert-equal expected actual))
                   (multiple-value-list ,place)
                   ,$new))
         (if (eql ,$old +unbound-value+)
           (makunbound ',place)
           (setf ,place (values-list ,$old)))))))



;;; tests/new-setf.lt ends here.
